# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-01 10:38
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import mymedia.defs
import mymedia.methods
import mytaggit.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mytaggit', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
            },
            bases=(models.Model, mymedia.methods.Album),
        ),
        migrations.CreateModel(
            name='AlbumFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mymedia.Album')),
            ],
            options={
                'verbose_name': 'Album File',
                'verbose_name_plural': 'Album Files',
                'ordering': ['album', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ImageMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.PositiveSmallIntegerField()),
                ('height', models.PositiveSmallIntegerField()),
                ('info', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'Image Meta',
                'verbose_name_plural': 'Image Meta',
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('filename', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.RegexValidator(message='your-beautifull-photo-01.jpg', regex='^[a-z]+[a-z\\d\\-\\.]+$')])),
                ('data', models.FileField(upload_to=mymedia.defs.UploadTo('data'))),
                ('access', models.CharField(choices=[('protected', 'Protected'), ('public', 'Public')], default='protected', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Media File',
                'verbose_name_plural': 'Media Files',
                'ordering': ['-id'],
            },
            bases=(models.Model, mymedia.methods.MediaFile),
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=200, unique=True)),
                ('label', models.CharField(blank=True, default=None, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Media Type',
                'verbose_name_plural': 'Media Types',
            },
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node', models.CharField(max_length=50)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='mymedia.Path')),
            ],
        ),
        migrations.CreateModel(
            name='StaticFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basename', models.CharField(max_length=200)),
                ('path', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='mymedia.Path')),
            ],
            bases=(models.Model, mymedia.methods.StaticFile),
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.FileField(upload_to=mymedia.defs.UploadThumbnailTo('data'))),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mymedia.MediaFile')),
            ],
            options={
                'verbose_name': 'Thumbnail',
                'verbose_name_plural': 'Thumbnails',
            },
        ),
        migrations.CreateModel(
            name='ThumbnailProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('width', models.PositiveSmallIntegerField()),
                ('height', models.PositiveSmallIntegerField()),
                ('info', models.TextField(default='{}')),
            ],
            options={
                'verbose_name': 'Thumbnail Profile',
                'verbose_name_plural': 'Thumbnail Profiles',
                'ordering': ['order'],
            },
            bases=(models.Model, mymedia.methods.ThumbnailProfile),
        ),
        migrations.AddField(
            model_name='thumbnail',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mymedia.ThumbnailProfile'),
        ),
        migrations.AddField(
            model_name='mediafile',
            name='media_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='mymedia.MediaType'),
        ),
        migrations.AddField(
            model_name='mediafile',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mediafile',
            name='tags',
            field=mytaggit.models.TaggableManager(help_text='A comma-separated list of tags.', through='mytaggit.TaggedItem', to='mytaggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='imagemeta',
            name='image',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mymedia.MediaFile'),
        ),
        migrations.AddField(
            model_name='albumfile',
            name='mediafile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mymedia.MediaFile'),
        ),
        migrations.AddField(
            model_name='album',
            name='files',
            field=models.ManyToManyField(through='mymedia.AlbumFile', to='mymedia.MediaFile'),
        ),
        migrations.AddField(
            model_name='album',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='staticfile',
            unique_together=set([('path', 'basename')]),
        ),
        migrations.AlterUniqueTogether(
            name='path',
            unique_together=set([('node', 'parent')]),
        ),
    ]
